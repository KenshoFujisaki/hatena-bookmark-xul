<?xml version="1.0" ?>
<?xml-stylesheet type="text/css" href="chrome://hatenabookmark/content/toolbar.css"?>
<?xml-stylesheet href="chrome://hatenabookmark/content/browser.css" type="text/css"?>
<?xul-overlay href="chrome://hatenabookmark/content/commonOverlay.xul"?>
<!DOCTYPE overlay SYSTEM "chrome://hatenabookmark/locale/browser.dtd">
<overlay id="HatenabookmarkOverlay" xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
    <script type="application/javascript" src="autoloader.js"></script>
    <script type="text/javascript; version=1.8" charset="utf-8">
    // <![CDATA[
        hBookmark.EventService.dispatch('fastload', window);
    // ]]>
    </script>

    <keyset>
        <key id="hBookmark-key-add"
            modifiers="accel,alt" 
            key="b"
            oncommand="hBookmark.AddPanelManager.toggle();" />
        <key id="hBookmark-key-show"
            modifiers="accel,alt" 
            key="c"
            oncommand="hBookmark.CommentViewer.show();" />
    </keyset>

    <menupopup id="viewSidebarMenu">
        <menuitem observes="viewHBookmarkSidebar" />
    </menupopup>

    <popup id="contentAreaContextMenu"> 
         <menuitem
             class="menuitem-iconic"
             insertafter="context-bookmarkpage"
             label="&hBookmark.menu.showentry;"
             id="hBookmark-menu-showentry"
             oncommand="openUILink(hBookmark.entryURL(window.content.location.href));"
             accesskey="E"
         />
         <menuitem
             class="menuitem-iconic"
             insertafter="context-bookmarkpage"
             label="&hBookmark.menu.add;"
             id="hBookmark-menu-addentry"
             oncommand="hBookmark.AddPanelManager.showPanel(window.content.location.href);"
             accesskey="B"
         />
         <menuitem
             class="menuitem-iconic"
             insertafter="context-bookmarklink"
             label="&hBookmark.menu.showlink;"
             id="hBookmark-menu-showlink"
             oncommand="openUILink(hBookmark.entryURL(gContextMenu.linkURL));"
             accesskey="E"
         />
         <menuitem
             class="menuitem-iconic"
             insertafter="context-bookmarklink"
             label="&hBookmark.menu.addlink;"
             id="hBookmark-menu-addlink"
             accesskey="B"
             oncommand="hBookmark.AddPanelManager.showPanel(gContextMenu.linkURL);"
         />
         <menuitem
             class="menuitem-iconic"
             insertafter="context-searchselect"
             label="&hBookmark.menu.searchtext;"
             id="hBookmark-menu-searchtext"
             accesskey="B"
             oncommand="hBookmark.UIUtils.selectedTextOpenHatenaWebSearch();"
         />
    </popup>


    <toolbarpalette id="BrowserToolbarPalette">
        <toolbarbutton 
            id="hBookmark-toolbar-add-button" 
            label="&hBookmark.toolbar.add;"
            tooltiptext="&hBookmark.toolbar.add;"
            class="toolbarbutton-1 chromeclass-toolbar-additional"
            oncommand="hBookmark.AddPanelManager.showPanel(window.content);" />

        <toolbarbutton 
            id="hBookmark-toolbar-home-button" 
            label="&hBookmark.toolbar.home;"
            tooltiptext="&hBookmark.toolbar.home;"
            class="toolbarbutton-1 chromeclass-toolbar-additional"
            oncommand="openUILink('http://b.hatena.ne.jp/my', event);"
            onclick="checkForMiddleClick(this, event);" />

        <toolbaritem id="hBookmark-toolbar-dropdown">
            <toolbarbutton
                id="hBookmarkDropdownButton"
                class="chromeclass-toolbar-additional"
                type="menu"
                label="&hBookmark.toolbar.recentLabel;"
                tooltiptext="&hBookmark.toolbar.recentLabel;">
                <menupopup context="hBookmarkEntryContext"/>
            </toolbarbutton>
        </toolbaritem>

        <toolbaritem id="urlbar-container">
               <textbox id="urlbar">
                    <hbox id="urlbar-icons">
                        <image id="hBookmark-search-icon" searchdisabled="true" onclick="hBookmark.LocationBar.iconClickHandler(event);" />
                    </hbox>
                </textbox>
        </toolbaritem>
    </toolbarpalette>

    <toolbox id="navigator-toolbox">
        <toolbar id="hBookmarkToolbar"
                 class="chromeclass-toolbar"
                 toolbarname="&hBookmark.toolbar.title;"
                 accesskey="&hBookmark.toolbar.titleKey;"/>
    </toolbox>


    <statusbar id="status-bar">
        <statusbarpanel id="hBookmark-statusBarPanel"
             collapsed="false"
        >
            <hbox align="center" id="hBookmark-syncProgressBox" hidden="true">
                <label value="&hBookmark.statusbar.now_syncing;" />
                <progressmeter 
                id="hBookmark-syncProgressMeter"
                tooltiptext="&hBookmark.statusbar.now_syncing;"
                style="width: 50px"
                width="50px" mode="determined" value="82" 
                />
            </hbox>

            <image id="hBookmarkAddButton" added="false"
                   tooltiptext="&hBookmark.statusbar.tooltip.addButton;"
                   onclick="hBookmark.AddPanelManager.toggle();"/>

            <hbox
                 align="center"
                 pack="end"
                 id="hBookmark-status-count"
                 onclick="hBookmark.StatusBar.goEntry(event);"
                 tooltiptext="&hBookmark.statusbar.tooltip.counter;"
                 value=""
            />


          <toolbarseparator class="hBookmark-status-separator" />

            <image
                 id="hBookmark-status-comment"
                 tooltiptext="&hBookmark.statusbar.tooltip.comment;"
                 onclick="hBookmark.CommentViewer.showClick();"
                 loading="false"
            />

        </statusbarpanel>
    </statusbar>

    <popupset id="mainPopupSet">
        <panel id="hBookmark-panel-comment" 
             orient="vertical"
             noautofocus="true"
             noautohide="false"
        >
        </panel>
        <panel 
            id="hBookmark-panel-urlbar" 
            noautofocus="true"
            noautohide="false"
        >
            <richlistbox 
            disableKeyNavigation="true"
            rows="6"
            context="hBookmarkEntryContext"
            id="hBookmark-urlbar-listbox" flex="1" />
        </panel>
    </popupset>

    <broadcasterset id="mainBroadcasterSet">
        <broadcaster id="viewHBookmarkSidebar"
                     label="&hBookmark.sidebar.label;"
                     accesskey="&hBookmark.sidebar.key;"
                     autoCheck="false"
                     type="checkbox"
                     group="sidebar"
                     sidebarurl="chrome://hatenabookmark/content/sidebar.xul"
                     sidebartitle="&hBookmark.sidebar.label;"
                     oncommand="toggleSidebar('viewHBookmarkSidebar');"/>
    </broadcasterset>

    <script type="text/javascript; version=1.8" charset="utf-8">
    // <![CDATA[
    (function() {
        with(hBookmark) {
            if (hBookmark.nowDebug) {
                Application.console.open();
            }

            EventService.dispatch('preload', window);

            window.addEventListener('load', function(e) {
                EventService.dispatch('load', window);

                if (!shared.get('firstPreload')) {
                    if (!Application.prefs.get('extensions.hatenabookmark.install').value) {
                        Application.prefs.get('extensions.hatenabookmark.install').value = true;
                        EventService.dispatch('Install');
                        toggleSidebar('viewHBookmarkSidebar'); // 初回はサイドバーを表示
                    }

                    EventService.dispatch('firstPreload', window);
                    shared.set('firstPreload', true);
                }
            }, false);

            window.addEventListener('unload', function(e) {
                EventService.dispatch('unload', window);
            }, false);

            var keyData = {};
            window.openDialog(
                'chrome://hatenabookmark/content/keyDetecter.xul',
                '_blank',
                'chrome,modal,resizable=no,titlebar=no,centerscreen',
                keyData,
                'hoge', 
                'huga'
            );
            if (keyData.modified) {
                p(keyData.string);
                p(uneval(keyData.string));
            }
            // setTimeout(function() {
            // var features = "chrome,titlebar,toolbar,centerscreen,modal";
            // window.openDialog('chrome://hatenabookmark/content/config.xul', "Preferences", features);
            // }, 100);
        }
    })();
    // ]]>
    </script>
</overlay>
